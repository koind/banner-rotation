// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/api.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RotationRequest struct {
	BannerId             int32    `protobuf:"varint,1,opt,name=banner_id,json=bannerId,proto3" json:"banner_id,omitempty"`
	SlotId               int32    `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RotationRequest) Reset()         { *m = RotationRequest{} }
func (m *RotationRequest) String() string { return proto.CompactTextString(m) }
func (*RotationRequest) ProtoMessage()    {}
func (*RotationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{0}
}

func (m *RotationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotationRequest.Unmarshal(m, b)
}
func (m *RotationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotationRequest.Marshal(b, m, deterministic)
}
func (m *RotationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotationRequest.Merge(m, src)
}
func (m *RotationRequest) XXX_Size() int {
	return xxx_messageInfo_RotationRequest.Size(m)
}
func (m *RotationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RotationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RotationRequest proto.InternalMessageInfo

func (m *RotationRequest) GetBannerId() int32 {
	if m != nil {
		return m.BannerId
	}
	return 0
}

func (m *RotationRequest) GetSlotId() int32 {
	if m != nil {
		return m.SlotId
	}
	return 0
}

func (m *RotationRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type RotationResponse struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BannerId             int32                `protobuf:"varint,2,opt,name=banner_id,json=bannerId,proto3" json:"banner_id,omitempty"`
	SlotId               int32                `protobuf:"varint,3,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	Description          string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreateAt             *timestamp.Timestamp `protobuf:"bytes,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RotationResponse) Reset()         { *m = RotationResponse{} }
func (m *RotationResponse) String() string { return proto.CompactTextString(m) }
func (*RotationResponse) ProtoMessage()    {}
func (*RotationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{1}
}

func (m *RotationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotationResponse.Unmarshal(m, b)
}
func (m *RotationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotationResponse.Marshal(b, m, deterministic)
}
func (m *RotationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotationResponse.Merge(m, src)
}
func (m *RotationResponse) XXX_Size() int {
	return xxx_messageInfo_RotationResponse.Size(m)
}
func (m *RotationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RotationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RotationResponse proto.InternalMessageInfo

func (m *RotationResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RotationResponse) GetBannerId() int32 {
	if m != nil {
		return m.BannerId
	}
	return 0
}

func (m *RotationResponse) GetSlotId() int32 {
	if m != nil {
		return m.SlotId
	}
	return 0
}

func (m *RotationResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RotationResponse) GetCreateAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreateAt
	}
	return nil
}

type Select struct {
	SlotId               int32    `protobuf:"varint,1,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	GroupId              int32    `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Select) Reset()         { *m = Select{} }
func (m *Select) String() string { return proto.CompactTextString(m) }
func (*Select) ProtoMessage()    {}
func (*Select) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{2}
}

func (m *Select) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Select.Unmarshal(m, b)
}
func (m *Select) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Select.Marshal(b, m, deterministic)
}
func (m *Select) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Select.Merge(m, src)
}
func (m *Select) XXX_Size() int {
	return xxx_messageInfo_Select.Size(m)
}
func (m *Select) XXX_DiscardUnknown() {
	xxx_messageInfo_Select.DiscardUnknown(m)
}

var xxx_messageInfo_Select proto.InternalMessageInfo

func (m *Select) GetSlotId() int32 {
	if m != nil {
		return m.SlotId
	}
	return 0
}

func (m *Select) GetGroupId() int32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

type Banner struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Banner) Reset()         { *m = Banner{} }
func (m *Banner) String() string { return proto.CompactTextString(m) }
func (*Banner) ProtoMessage()    {}
func (*Banner) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{3}
}

func (m *Banner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Banner.Unmarshal(m, b)
}
func (m *Banner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Banner.Marshal(b, m, deterministic)
}
func (m *Banner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Banner.Merge(m, src)
}
func (m *Banner) XXX_Size() int {
	return xxx_messageInfo_Banner.Size(m)
}
func (m *Banner) XXX_DiscardUnknown() {
	xxx_messageInfo_Banner.DiscardUnknown(m)
}

var xxx_messageInfo_Banner proto.InternalMessageInfo

func (m *Banner) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Transition struct {
	BannerId             int32    `protobuf:"varint,1,opt,name=banner_id,json=bannerId,proto3" json:"banner_id,omitempty"`
	GroupId              int32    `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transition) Reset()         { *m = Transition{} }
func (m *Transition) String() string { return proto.CompactTextString(m) }
func (*Transition) ProtoMessage()    {}
func (*Transition) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{4}
}

func (m *Transition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transition.Unmarshal(m, b)
}
func (m *Transition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transition.Marshal(b, m, deterministic)
}
func (m *Transition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transition.Merge(m, src)
}
func (m *Transition) XXX_Size() int {
	return xxx_messageInfo_Transition.Size(m)
}
func (m *Transition) XXX_DiscardUnknown() {
	xxx_messageInfo_Transition.DiscardUnknown(m)
}

var xxx_messageInfo_Transition proto.InternalMessageInfo

func (m *Transition) GetBannerId() int32 {
	if m != nil {
		return m.BannerId
	}
	return 0
}

func (m *Transition) GetGroupId() int32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

type Status struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{5}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*RotationRequest)(nil), "pb.RotationRequest")
	proto.RegisterType((*RotationResponse)(nil), "pb.RotationResponse")
	proto.RegisterType((*Select)(nil), "pb.Select")
	proto.RegisterType((*Banner)(nil), "pb.Banner")
	proto.RegisterType((*Transition)(nil), "pb.Transition")
	proto.RegisterType((*Status)(nil), "pb.Status")
}

func init() { proto.RegisterFile("api/api.proto", fileDescriptor_1b40cafcd4234784) }

var fileDescriptor_1b40cafcd4234784 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4d, 0x6f, 0xe2, 0x30,
	0x14, 0x54, 0x02, 0x84, 0xe4, 0xf1, 0xb1, 0x2b, 0xef, 0x6a, 0x37, 0x4d, 0x0f, 0x8d, 0x72, 0x40,
	0x48, 0x95, 0x82, 0x44, 0xa5, 0xf6, 0xd2, 0x0b, 0xa8, 0x17, 0xae, 0x86, 0x53, 0x2f, 0xc8, 0xc1,
	0x2e, 0xb2, 0x04, 0xb1, 0x1b, 0x3b, 0xfd, 0x63, 0xfd, 0x01, 0xfd, 0x6b, 0x55, 0xec, 0x50, 0x02,
	0x55, 0xb9, 0x79, 0xe6, 0x4d, 0xde, 0x4c, 0xe6, 0xc1, 0x80, 0x48, 0x3e, 0x21, 0x92, 0xa7, 0xb2,
	0x10, 0x5a, 0x20, 0x57, 0x66, 0xd1, 0xcd, 0x56, 0x88, 0xed, 0x8e, 0x4d, 0x0c, 0x93, 0x95, 0x2f,
	0x13, 0xcd, 0xf7, 0x4c, 0x69, 0xb2, 0x97, 0x56, 0x94, 0x70, 0xf8, 0x85, 0x85, 0x26, 0x9a, 0x8b,
	0x1c, 0xb3, 0xd7, 0x92, 0x29, 0x8d, 0xae, 0x21, 0xc8, 0x48, 0x9e, 0xb3, 0x62, 0xcd, 0x69, 0xe8,
	0xc4, 0xce, 0xb8, 0x83, 0x7d, 0x4b, 0x2c, 0x28, 0xfa, 0x0f, 0x5d, 0xb5, 0x13, 0xba, 0x1a, 0xb9,
	0x66, 0xe4, 0x55, 0x70, 0x41, 0x51, 0x0c, 0x3d, 0xca, 0xd4, 0xa6, 0xe0, 0xb2, 0xda, 0x15, 0xb6,
	0x62, 0x67, 0x1c, 0xe0, 0x26, 0x95, 0xbc, 0x3b, 0xf0, 0xfb, 0xe8, 0xa5, 0xa4, 0xc8, 0x15, 0x43,
	0x43, 0x70, 0xbf, 0x5c, 0x5c, 0x4e, 0x4f, 0xcd, 0xdd, 0x9f, 0xcd, 0x5b, 0x97, 0xcc, 0xdb, 0xdf,
	0xcc, 0xd1, 0x03, 0x04, 0x9b, 0x82, 0x11, 0xcd, 0xd6, 0x44, 0x87, 0x9d, 0xd8, 0x19, 0xf7, 0xa6,
	0x51, 0x6a, 0xcb, 0x49, 0x0f, 0xe5, 0xa4, 0xab, 0x43, 0x39, 0xd8, 0xb7, 0xe2, 0x99, 0x4e, 0x1e,
	0xc1, 0x5b, 0xb2, 0x1d, 0xdb, 0xe8, 0xa6, 0xbb, 0x73, 0xe2, 0x7e, 0x05, 0xfe, 0xb6, 0x10, 0xa5,
	0x3c, 0x46, 0xee, 0x1a, 0xbc, 0xa0, 0x49, 0x08, 0xde, 0xdc, 0xa4, 0x3f, 0xff, 0xd1, 0xe4, 0x09,
	0x60, 0x55, 0x90, 0x5c, 0x71, 0x13, 0xef, 0x62, 0xe7, 0x17, 0xf6, 0xc7, 0xe0, 0x2d, 0x35, 0xd1,
	0xa5, 0x42, 0xff, 0xc0, 0x53, 0xe6, 0x65, 0x3e, 0x0f, 0x70, 0x8d, 0xa6, 0x1f, 0x0e, 0xf8, 0x87,
	0xd6, 0xd1, 0x3d, 0x04, 0x33, 0x4a, 0xeb, 0x44, 0x7f, 0x52, 0x99, 0xa5, 0x67, 0xc7, 0x8f, 0xfe,
	0x9e, 0x92, 0xf5, 0x95, 0x6e, 0x61, 0xb0, 0x64, 0xba, 0x91, 0x77, 0x58, 0xc9, 0x8e, 0x38, 0x82,
	0x0a, 0xd7, 0x49, 0x46, 0xd0, 0xb7, 0x8d, 0xd5, 0x3e, 0x76, 0x66, 0x18, 0xab, 0xab, 0xf9, 0x11,
	0xf4, 0x31, 0xdb, 0x8b, 0x37, 0xd6, 0xd4, 0xd9, 0x77, 0x73, 0xdf, 0xbc, 0xfd, 0xec, 0xca, 0x2c,
	0xf3, 0xcc, 0x95, 0xee, 0x3e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x05, 0xb2, 0x66, 0xe5, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RotationClient is the client API for Rotation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RotationClient interface {
	// Adds a banner in the rotation
	AddBanner(ctx context.Context, in *RotationRequest, opts ...grpc.CallOption) (*RotationResponse, error)
	// Sets the transition on the banner
	SetTransition(ctx context.Context, in *Transition, opts ...grpc.CallOption) (*Status, error)
	// Selects a banner to display
	SelectBanner(ctx context.Context, in *Select, opts ...grpc.CallOption) (*Banner, error)
	// Removes the banner from the rotation
	RemoveBanner(ctx context.Context, in *Banner, opts ...grpc.CallOption) (*Status, error)
}

type rotationClient struct {
	cc *grpc.ClientConn
}

func NewRotationClient(cc *grpc.ClientConn) RotationClient {
	return &rotationClient{cc}
}

func (c *rotationClient) AddBanner(ctx context.Context, in *RotationRequest, opts ...grpc.CallOption) (*RotationResponse, error) {
	out := new(RotationResponse)
	err := c.cc.Invoke(ctx, "/pb.Rotation/AddBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationClient) SetTransition(ctx context.Context, in *Transition, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/pb.Rotation/SetTransition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationClient) SelectBanner(ctx context.Context, in *Select, opts ...grpc.CallOption) (*Banner, error) {
	out := new(Banner)
	err := c.cc.Invoke(ctx, "/pb.Rotation/SelectBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationClient) RemoveBanner(ctx context.Context, in *Banner, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/pb.Rotation/RemoveBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RotationServer is the server API for Rotation service.
type RotationServer interface {
	// Adds a banner in the rotation
	AddBanner(context.Context, *RotationRequest) (*RotationResponse, error)
	// Sets the transition on the banner
	SetTransition(context.Context, *Transition) (*Status, error)
	// Selects a banner to display
	SelectBanner(context.Context, *Select) (*Banner, error)
	// Removes the banner from the rotation
	RemoveBanner(context.Context, *Banner) (*Status, error)
}

// UnimplementedRotationServer can be embedded to have forward compatible implementations.
type UnimplementedRotationServer struct {
}

func (*UnimplementedRotationServer) AddBanner(ctx context.Context, req *RotationRequest) (*RotationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBanner not implemented")
}
func (*UnimplementedRotationServer) SetTransition(ctx context.Context, req *Transition) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTransition not implemented")
}
func (*UnimplementedRotationServer) SelectBanner(ctx context.Context, req *Select) (*Banner, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectBanner not implemented")
}
func (*UnimplementedRotationServer) RemoveBanner(ctx context.Context, req *Banner) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveBanner not implemented")
}

func RegisterRotationServer(s *grpc.Server, srv RotationServer) {
	s.RegisterService(&_Rotation_serviceDesc, srv)
}

func _Rotation_AddBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RotationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationServer).AddBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Rotation/AddBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationServer).AddBanner(ctx, req.(*RotationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rotation_SetTransition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationServer).SetTransition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Rotation/SetTransition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationServer).SetTransition(ctx, req.(*Transition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rotation_SelectBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Select)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationServer).SelectBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Rotation/SelectBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationServer).SelectBanner(ctx, req.(*Select))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rotation_RemoveBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Banner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationServer).RemoveBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Rotation/RemoveBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationServer).RemoveBanner(ctx, req.(*Banner))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rotation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Rotation",
	HandlerType: (*RotationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddBanner",
			Handler:    _Rotation_AddBanner_Handler,
		},
		{
			MethodName: "SetTransition",
			Handler:    _Rotation_SetTransition_Handler,
		},
		{
			MethodName: "SelectBanner",
			Handler:    _Rotation_SelectBanner_Handler,
		},
		{
			MethodName: "RemoveBanner",
			Handler:    _Rotation_RemoveBanner_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}
